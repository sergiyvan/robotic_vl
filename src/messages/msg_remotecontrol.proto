package de.fumanoids.message;


import "msg_message.proto";


/*------------------------------------------------------------------------------------------------*/

message RemoteControlRequest {

	optional bool walkerStart = 1;
	optional bool walkerStop  = 2;
	optional bool walkerEnabled = 6;

	enum WalkingMode {
		DEFAULT = 1; // standard
		AVOIDOBSTACLE = 2; // walk with activated obstacle avoidance
		// and more ...
	}

	message WalkerSpeed {
		optional sint32 forwardSpeed     = 1;
		optional sint32 sidewardSpeed    = 2;
		optional sint32 rotationSpeed    = 3;
		optional sint32 footDrift        = 4;
		optional WalkingMode walkingMode = 5;
	}
	optional WalkerSpeed walkerSpeed = 3;
	optional bool performStandupMotion 	= 4;
	
	enum KickMotion {
		KICK_LEFT = 1;
		KICK_RIGHT = 2;
	}
	optional KickMotion performKickMotion = 5;

	message RobotPose2012 {
		// upper body
		optional int32 MOTOR_HEAD_TURN             =  2;

		optional int32 MOTOR_LEFT_ARM_PITCH        =  3;
		optional int32 MOTOR_RIGHT_ARM_PITCH       =  4;

		optional int32 MOTOR_LEFT_ARM_ROLL         =  5;
		optional int32 MOTOR_RIGHT_ARM_ROLL        =  6;

		optional int32 MOTOR_LEFT_ELBOW            =  7;
		optional int32 MOTOR_RIGHT_ELBOW           =  8;

		// legs
		optional int32 MOTOR_LEFT_STOMACH          =  9;

		optional int32 MOTOR_LEFT_HIP_ROLL         = 11;
		optional int32 MOTOR_RIGHT_HIP_ROLL        = 12;

		optional int32 MOTOR_LEFT_KNEE_TOP         = 13;
		optional int32 MOTOR_RIGHT_KNEE_TOP        = 14;

		optional int32 MOTOR_LEFT_KNEE_BOTTOM      = 15;
		optional int32 MOTOR_RIGHT_KNEE_BOTTOM     = 16;

		optional int32 MOTOR_LEFT_FOOT_ROLL        = 17;
		optional int32 MOTOR_RIGHT_FOOT_ROLL       = 18;

		optional int32 MOTOR_LEFT_FOOT_YAW         = 19;
		optional int32 MOTOR_RIGHT_FOOT_YAW        = 20;
	}
	optional RobotPose2012 robotPose2012 = 16;


	message RobotPoseAngle2012 {
		// upper body
		optional int32 MOTOR_HEAD_TURN             =  2 [default = 0];

		optional int32 MOTOR_LEFT_ARM_PITCH        =  3 [default = 0];
		optional int32 MOTOR_RIGHT_ARM_PITCH       =  4 [default = 0];

		optional int32 MOTOR_LEFT_ARM_ROLL         =  5 [default = 0];
		optional int32 MOTOR_RIGHT_ARM_ROLL        =  6 [default = 0];

		optional int32 MOTOR_LEFT_ELBOW            =  7 [default = 0];
		optional int32 MOTOR_RIGHT_ELBOW           =  8 [default = 0];

		// legs
		optional int32 MOTOR_LEFT_STOMACH          =  9 [default = 0];

		optional int32 MOTOR_LEFT_HIP_ROLL         = 11 [default = 0];
		optional int32 MOTOR_RIGHT_HIP_ROLL        = 12 [default = 0];

		optional int32 MOTOR_LEFT_KNEE_TOP         = 13 [default = 0];
		optional int32 MOTOR_RIGHT_KNEE_TOP        = 14 [default = 0];

		optional int32 MOTOR_LEFT_KNEE_BOTTOM      = 15 [default = 0];
		optional int32 MOTOR_RIGHT_KNEE_BOTTOM     = 16 [default = 0];

		optional int32 MOTOR_LEFT_FOOT_ROLL        = 17 [default = 0];
		optional int32 MOTOR_RIGHT_FOOT_ROLL       = 18 [default = 0];

		optional int32 MOTOR_LEFT_FOOT_YAW         = 19 [default = 0];
		optional int32 MOTOR_RIGHT_FOOT_YAW        = 20 [default = 0];
	}
	optional RobotPoseAngle2012 robotPoseAngle2012 = 17;
}

extend Message {
	optional RemoteControlRequest remoteControlRequest = 103;
}
